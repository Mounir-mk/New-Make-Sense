generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comment {
  id          Int      @id @default(autoincrement()) @db.UnsignedInt
  content     String   @db.VarChar(255)
  user_id     Int      @db.UnsignedInt
  decision_id Int      @db.UnsignedInt
  date        DateTime @default(dbgenerated("(now())")) @db.DateTime(0)
  user        user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "comment_user")
  decision    decision @relation(fields: [decision_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "decision_comment")

  @@index([user_id], map: "comment_user")
  @@index([decision_id], map: "decision_comment")
}

model concerned {
  id          Int                   @id @default(autoincrement()) @db.UnsignedInt
  user_status concerned_user_status
  user_id     Int                   @db.UnsignedInt
  decision_id Int                   @db.UnsignedInt
  decision    decision              @relation(fields: [decision_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "concerned_decision")
  user        user                  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "concerned_user")

  @@index([decision_id], map: "concerned_decision")
  @@index([user_id], map: "concerned_user")
}

model decision {
  id              Int             @id @default(autoincrement()) @db.UnsignedInt
  title           String          @db.VarChar(150)
  deadline        DateTime        @db.Date
  publish_date    DateTime        @default(dbgenerated("(curdate())")) @db.Date
  start_content   String          @db.Text
  impact          String          @db.Text
  risk            String          @db.Text
  advantage       String          @db.Text
  middle_decision String?         @db.Text
  final_decision  String?         @db.Text
  user_id         Int             @db.UnsignedInt
  status          decision_status @default(in_progress)
  comment         comment[]
  concerned       concerned[]
  user            user            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "decision_user")

  @@index([user_id], map: "decision_user")
}

model user {
  id              Int         @id @default(autoincrement()) @db.UnsignedInt
  firstname       String      @db.VarChar(50)
  lastname        String      @db.VarChar(50)
  image_url       String?     @db.VarChar(255)
  role            String      @default("visitor") @db.VarChar(15)
  email           String      @unique(map: "email") @db.VarChar(50)
  hashed_password String      @db.VarChar(255)
  comment         comment[]
  concerned       concerned[]
  decision        decision[]
}

enum concerned_user_status {
  experts
  impacted
}

enum decision_status {
  in_progress
  finished
}
